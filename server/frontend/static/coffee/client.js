// Generated by CoffeeScript 1.10.0
(function() {
  var sharereadClient;

  sharereadClient = {
    updateFile: function(filehash, data) {
      var key;
      data = $.extend(data, {
        filehash: filehash
      });
      for (key in data) {
        data[key] = JSON.stringify(data[key]);
      }
      return $.post('file/update', data, function(response) {});
    },
    fetchFileMeta: function(filehashes, callback) {
      return $.post('file/meta', {
        filehashes: JSON.stringify(filehashes)
      }, function(response) {
        sharereadStore.mergeFileMeta(response.meta_by_filehash);
        return callback(response);
      });
    },
    fetchRecentFilehashes: function(num_activities, callback) {
      return $.get('recents/fetch', function(response) {
        sharereadStore.mergeFileHashes(response.filehashes);
        sharereadStore.setActiveFilehashes(response.filehashes);
        return callback(response);
      });
    },
    fetchMiscInfo: function(callback) {
      return $.get('db/misc', function(response) {
        console.log('misc', response);
        sharereadStore.setMiscInfo(response);
        return callback();
      });
    },
    searchFile: function(tags, callback) {
      var client;
      client = this;
      return $.post('search', {
        tags: JSON.stringify(tags),
        keywords: JSON.stringify("")
      }, function(response) {
        sharereadStore.setActiveFilehashes(response.filehashes);
        return client.fetchFileMeta(response.filehashes, function(response) {
          return callback();
        });
      });
    },
    fetchRecents: function(num_activities, callback) {
      var client;
      client = this;
      return client.fetchRecentFilehashes(num_activities, function(response) {
        return client.fetchFileMeta(response.filehashes, function(response) {
          return callback();
        });
      });
    }
  };

}).call(this);
